
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module CSCE611_lab_ri(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,

	//////////// LED //////////
	output		     [8:0]		LEDG,
	output		    [17:0]		LEDR,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		    [17:0]		SW,

	//////////// SEG7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5,
	output		     [6:0]		HEX6,
	output		     [6:0]		HEX7
);

logic [31:0] gpio_in;
//logic [55:0] segs;
logic [31:0] gpio_out;
assign gpio_in = {14'h0,SW};
cpu mycpu(.clk(CLOCK_50), .rst(~KEY[0]), .gpio_in(gpio_in), .gpio_out(gpio_out));

logic [3:0] a ,b ,c, d, e, f, g, h;

hexdriver hex0(.val(a), .HEX(HEX0));
hexdriver hex1(.val(b), .HEX(HEX1));
hexdriver hex2(.val(c), .HEX(HEX2));
hexdriver hex3(.val(d), .HEX(HEX3));
hexdriver hex4(.val(e), .HEX(HEX4));
hexdriver hex5(.val(f), .HEX(HEX5));
hexdriver hex6(.val(g), .HEX(HEX6));
hexdriver hex7(.val(h), .HEX(HEX7));


always begin

end 

always_ff @(posedge CLOCK_50) begin
	if (~KEY[0]) begin // reset signal high

		a <= 4'b0;
		b <= 4'b0;
		c <= 4'b0;
		d <= 4'b0;
		e <= 4'b0;
		f <= 4'b0;
		g <= 4'b0;
		h <= 4'b0;
	end else


		h <= gpio_out[31:28];
		g <= gpio_out[27:24];
		f <= gpio_out[23:20];
	 	e <= gpio_out[19:16];
		d <= gpio_out[15:12];
		c <= gpio_out[11:8];
		b <= gpio_out[7:4];
		a <= gpio_out[3:0];

end


//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================



endmodule
